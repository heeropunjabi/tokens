{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","utils/getWeb3.js","components/BuyTokenForm.jsx","components/ReturnTokenForm.jsx","components/RedeemTokenForm.jsx","components/Token.jsx","App.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","getWeb3","Promise","reject","window","addEventListener","Object","asyncToGenerator","regenerator_default","a","mark","_callee","web3","_web","provider","_web2","wrap","_context","prev","next","ethereum","Web3","enable","t0","console","log","providers","HttpProvider","stop","BuyTokenFormJsx","componentDidMount","accounts","networkId","deployedNetwork","deployedNetwork2","instance","HotelTokenInstance","sent","eth","getAccounts","net","getId","HotelTokenSale","networks","HotelToken","Contract","abi","address","_this","setState","contract","alert","error","disabledDate","current","moment","endOf","handleSubmit","preventDefault","props","form","validateFields","_ref2","_callee2","err","values","date","_context2","state","Date","buyTokenDate","getDate","methods","buyTokens","parseInt","buyToken","send","from","event","concat","_x","_x2","apply","this","arguments","getFieldDecorator","react_default","createElement","divider","es_form","onSubmit","className","Item","rules","required","message","date_picker","size","input","type","placeholder","es_button","htmlType","Component","BuyTokenForm","Form","create","name","ReturnTokenForm","_HotelToken","returnTokenDate","transfer","receiverAddress","returnToken","ReturnToken","RedeemTokenFormJsx","redeemTokenDate","redeem","redeemToken","RedeemTokenForm","Token","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","events","allEvents","runExample","_this$state","_address","balanceOf","then","balance","total","totalTokens","row","justify","gutter","col","span","card","bordered","components_BuyTokenForm","components_ReturnTokenForm","components_RedeemTokenForm","App","Token_Token","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bc13a80f.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 426;","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from 'react'\nimport { Form, Input, Divider, Button, DatePicker } from 'antd';\nimport moment from 'moment';\n\nimport getWeb3 from \"../utils/getWeb3\";\n\nimport HotelToken from '../contracts/HotelToken.json';\nimport HotelTokenSale from \"../contracts/HotelTokenSale.json\";\n\n\nclass BuyTokenFormJsx extends Component {\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = HotelTokenSale.networks[networkId];\n\n      const deployedNetwork2 = HotelToken.networks[networkId];\n\n      // const deployedNetwork2 = HotelToken.networks[networkId];\n      const instance = new web3.eth.Contract(\n        HotelTokenSale.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const HotelTokenInstance = new web3.eth.Contract(\n        HotelToken.abi,\n        deployedNetwork2 && deployedNetwork2.address\n      );\n\n      this.setState({ web3, accounts, contract: instance, HotelToken: HotelTokenInstance });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  disabledDate = (current) => {\n    // Can not select days before today and today\n    return current && current < moment().endOf('day');\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields(async (err, values) => {\n      if (!err) {\n        const { contract } = this.state;\n        const date = new Date(values.buyTokenDate).getDate();\n        contract.methods.buyTokens(parseInt(values.buyToken), date).send({\n          from: this.state.accounts[0]\n        }, (error, event) => {\n\n          if (!error) {\n            alert(`you have bought ${values.buyToken} token for Date ${new Date(values.buyTokenDate)}`); return;\n          }\n          alert(error);\n        });\n\n      }\n    });\n  };\n  render () {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        <Divider><h2>Buy Room</h2></Divider>\n        <Form onSubmit={this.handleSubmit} className=\"buy-form\">\n          <Form.Item>\n            {getFieldDecorator('buyTokenDate', {\n              rules: [{ required: true, message: 'Please select date!' }],\n            })(\n              <DatePicker id=\"buyTokenDate\" disabledDate={this.disabledDate} size=\"large\" />\n            )}\n          </Form.Item>\n          <Form.Item >\n            {getFieldDecorator('buyToken', {\n              rules: [{ required: true, message: 'Please enter value' }],\n            })(\n              <Input id=\"buyToken\" type=\"text\" size=\"large\" placeholder=\"Buy Token\" />\n            )}\n          </Form.Item>\n\n          <Form.Item>\n            <Button className=\"btn-success\" htmlType=\"submit\">\n              Buy Room\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    )\n  }\n}\n\nconst BuyTokenForm = Form.create({ name: 'buy_token' })(BuyTokenFormJsx);\n\nexport default BuyTokenForm;","import React, { Component } from 'react'\nimport { Form, Input, Divider, Button, DatePicker } from 'antd';\nimport moment from 'moment';\n\nimport getWeb3 from \"../utils/getWeb3\";\n\nimport HotelToken from '../contracts/HotelToken.json';\nimport HotelTokenSale from \"../contracts/HotelTokenSale.json\";\n\nclass ReturnTokenForm extends Component {\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = HotelTokenSale.networks[networkId];\n\n      const deployedNetwork2 = HotelToken.networks[networkId];\n\n      // const deployedNetwork2 = HotelToken.networks[networkId];\n      const instance = new web3.eth.Contract(\n        HotelTokenSale.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const HotelTokenInstance = new web3.eth.Contract(\n        HotelToken.abi,\n        deployedNetwork2 && deployedNetwork2.address\n      );\n\n      this.setState({ web3, accounts, contract: instance, HotelToken: HotelTokenInstance });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  disabledDate = (current) => {\n    // Can not select days before today and today\n    return current && current < moment().endOf('day');\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields(async (err, values) => {\n      if (!err) {\n        console.log(values);\n        debugger;\n        const { HotelToken } = this.state;\n        debugger\n        const date = new Date(values.returnTokenDate).getDate();\n        HotelToken.methods.transfer(values.receiverAddress, parseInt(values.returnToken), date).send({\n          from: this.state.accounts[0]\n        }, (error, event) => {\n\n          if (!error) {\n            alert(`you have transferred ${values.returnToken} token to ${values.receiverAddress}`); return;\n          }\n          alert(error);\n        });\n      }\n    });\n  };\n\n  render () {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        <Divider><h2>Transfer Room Ownership</h2></Divider>\n        <Form onSubmit={this.handleSubmit} className=\"return-form\">\n          <Form.Item>\n            {getFieldDecorator('returnTokenDate', {\n              rules: [{ required: true, message: 'Please select date!' }],\n            })(\n              <DatePicker id=\"returnTokenDate\" disabledDate={this.disabledDate} size=\"large\" />\n            )}\n          </Form.Item>\n          <Form.Item >\n            {getFieldDecorator('returnToken', {\n              rules: [{ required: true, message: 'Please enter value' }],\n            })(\n              <Input id=\"returnToken\" type=\"text\" size=\"large\" placeholder=\"Transfer Token\" />\n            )}\n          </Form.Item>\n          <Form.Item >\n            {getFieldDecorator('receiverAddress', {\n              rules: [{ required: true, message: 'Please enter value' }],\n            })(\n              <Input id=\"receiver\" type=\"text\" size=\"large\" placeholder=\"Receiver Address\" />\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"secondary\" className=\"btn-info\" htmlType=\"submit\">\n              Transfer\n            </Button>\n          </Form.Item>\n        </Form>\n      </div >\n    )\n  }\n}\n\nconst ReturnToken = Form.create({ name: 'return_token' })(ReturnTokenForm);\n\nexport default ReturnToken;","import React, { Component } from 'react'\nimport { Divider, Form, Input, Button, DatePicker } from 'antd';\nimport moment from 'moment';\n\nimport getWeb3 from \"../utils/getWeb3\";\n\nimport HotelToken from '../contracts/HotelToken.json';\nimport HotelTokenSale from \"../contracts/HotelTokenSale.json\";\n\n\nclass RedeemTokenFormJsx extends Component {\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = HotelTokenSale.networks[networkId];\n\n      const deployedNetwork2 = HotelToken.networks[networkId];\n\n      // const deployedNetwork2 = HotelToken.networks[networkId];\n      const instance = new web3.eth.Contract(\n        HotelTokenSale.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const HotelTokenInstance = new web3.eth.Contract(\n        HotelToken.abi,\n        deployedNetwork2 && deployedNetwork2.address\n      );\n\n      this.setState({ web3, accounts, contract: instance, HotelToken: HotelTokenInstance });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  disabledDate = (current) => {\n    // Can not select days before today and today\n    return current && current < moment().endOf('day');\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields(async (err, values) => {\n      if (!err) {\n        console.log(values);\n        debugger;\n        const { HotelToken } = this.state;\n        const date = new Date(values.redeemTokenDate).getDate();\n        HotelToken.methods.redeem(parseInt(values.redeemToken), date).send({\n          from: this.state.accounts[0]\n        }, (error, event) => {\n\n          if (!error) {\n            alert(`you have Redeemed ${values.redeemToken} tokens.`); return;\n          }\n          alert(error);\n        });\n      }\n    });\n  };\n  render () {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        <Divider><h2>Redeem Room Token</h2></Divider>\n        <Form onSubmit={this.handleSubmit} className=\"redeem-form\">\n          <Form.Item>\n            {getFieldDecorator('redeemTokenDate', {\n              rules: [{ required: true, message: 'Please select date!' }],\n            })(\n              <DatePicker id=\"redeemTokenDate\" disabledDate={this.disabledDate} size=\"large\" />\n            )}\n          </Form.Item>\n          <Form.Item >\n            {getFieldDecorator('redeemToken', {\n              rules: [{ required: true, message: 'Please enter value' }],\n            })(\n              <Input id=\"redeemToken\" type=\"text\" size=\"large\" placeholder=\"Redeem token\" />\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"secondary\" className=\"btn-warning\" htmlType=\"submit\">\n              Redeem Now\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    )\n  }\n}\n\nconst RedeemTokenForm = Form.create({ name: 'buy_token' })(RedeemTokenFormJsx);\n\nexport default RedeemTokenForm;","import React, { Component } from 'react';\nimport BuyTokenForm from './BuyTokenForm';\nimport ReturnTokenForm from './ReturnTokenForm';\nimport RedeemTokenForm from './RedeemTokenForm';\nimport getWeb3 from \"../utils/getWeb3\";\n\nimport HotelToken from '../contracts/HotelToken.json';\nimport HotelTokenSale from \"../contracts/HotelTokenSale.json\";\nimport { Row, Col, Card } from 'antd';\n\n\n\nexport default class Token extends Component {\n  constructor() {\n    super();\n    this.state = {\n      totalTokens: 'loading',\n      accounts: ['loading'],\n      balance: 'loading'\n    }\n  }\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = HotelTokenSale.networks[networkId];\n\n      const deployedNetwork2 = HotelToken.networks[networkId];\n\n      // const deployedNetwork2 = HotelToken.networks[networkId];\n      const instance = new web3.eth.Contract(\n        HotelTokenSale.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const HotelTokenInstance = new web3.eth.Contract(\n        HotelToken.abi,\n        deployedNetwork2 && deployedNetwork2.address\n      );\n\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      instance.events.allEvents({}, (e) => {\n        if (!e) {\n          this.runExample();\n        }\n      });\n      HotelTokenInstance.events.allEvents({}, (e) => {\n        if (!e) {\n          this.runExample();\n        }\n      });\n\n      this.setState({ web3, accounts, contract: instance, HotelToken: HotelTokenInstance }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  runExample = async () => {\n    const { contract, HotelToken, accounts } = this.state;\n    const address = contract._address;\n\n    HotelToken.methods.balanceOf(accounts[0]).call().then((balance) => {\n      HotelToken.methods.balanceOf(address).call().then((total) => {\n        this.setState({\n          totalTokens: total,\n          balance,\n        })\n      })\n    })\n  };\n  render () {\n    return (\n      <div className=\"form-wrapper\">\n        <div className=\"header\">\n          <h1>Token Sale</h1>\n          <p>Hotel Token</p>\n        </div>\n\n        {/* <div className=\"mb-50\"> \n          <Button type=\"danger\"><b>Total Token Available for Sell : {this.state.totalTokens}</b></Button>\n        </div> */}\n        <Row type=\"flex\" justify=\"space-around\" gutter=\"30\">\n          <Col span={8}>\n            <Card bordered={false}>\n              <BuyTokenForm />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card bordered={false}>\n              <ReturnTokenForm />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card bordered={false}>\n              <RedeemTokenForm />\n            </Card>\n          </Col>\n        </Row>\n        <br />\n        <div><b>Tokens in your account : {this.state.balance} </b></div>\n        <br />\n\n        <div>Account Address is => {this.state.accounts[0]} </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\n// import SimpleStorageContract from \"./contracts/SimpleStorage.json\";\n// import Home from './components/Home';\nimport Token from './components/Token';\n\nimport 'antd/dist/antd.css'\nimport \"./App.css\";\n\nclass App extends Component {\n\n\n  render () {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n    return (\n      <div className=\"App\">\n        <Token />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}